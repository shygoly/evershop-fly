name: Deploy new EverShop instance

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "New Fly.io app name (e.g. evershop-fly-branch1)"
        required: true
        type: string
      shop_name:
        description: "Display name of the shop"
        required: true
        type: string
      admin_email:
        description: "Admin email (stored as secret on the app)"
        required: true
        type: string
      admin_password:
        description: "Admin password (stored as secret on the app)"
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      FLYCTL_ACCESS_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Create app if not exists
        shell: bash
        run: |
          set -euo pipefail
          flyctl apps create "${{ inputs.app_name }}" || echo "App exists, continue"

      - name: Configure secrets (DB/R2 shared, shop/admin customized)
        shell: bash
        run: |
          set -euo pipefail
          NODE_CONFIG_JSON=$(printf '%s' '{"shop":{"name":"'"${{ inputs.shop_name }}"'"}}')
          flyctl secrets set \
            DATABASE_URL='${{ secrets.DATABASE_URL }}' \
            AWS_ACCESS_KEY_ID='${{ secrets.AWS_ACCESS_KEY_ID }}' \
            AWS_SECRET_ACCESS_KEY='${{ secrets.AWS_SECRET_ACCESS_KEY }}' \
            AWS_REGION='${{ secrets.AWS_REGION }}' \
            AWS_BUCKET_NAME='${{ secrets.AWS_BUCKET_NAME }}' \
            AWS_ENDPOINT_URL_S3='${{ secrets.AWS_ENDPOINT_URL_S3 }}' \
            PUBLIC_ASSET_BASE_URL='${{ secrets.PUBLIC_ASSET_BASE_URL }}' \
            NODE_CONFIG="$NODE_CONFIG_JSON" \
            ADMIN_EMAIL='${{ inputs.admin_email }}' \
            ADMIN_PASSWORD='${{ inputs.admin_password }}' \
            -a "${{ inputs.app_name }}"

      - name: Deploy to Fly.io (remote builder)
        shell: bash
        run: |
          set -euo pipefail
          flyctl deploy -a "${{ inputs.app_name }}" --remote-only

      - name: Create admin user
        shell: bash
        run: |
          set -euo pipefail
          # Try official CLI if present, fallback to node cli.js path
          flyctl ssh console -a "${{ inputs.app_name }}" -C "bash -lc 'set -e; if command -v evershop >/dev/null 2>&1; then evershop user create --email \"${{ inputs.admin_email }}\" --password \"${{ inputs.admin_password }}\" --role admin; else node /app/node_modules/@evershop/evershop/bin/cli.js user create --email \"${{ inputs.admin_email }}\" --password \"${{ inputs.admin_password }}\" --role admin; fi'"

      - name: Output
        run: |
          echo "App: ${{ inputs.app_name }} deployed."
          echo "Visit: https://${{ inputs.app_name }}.fly.dev"
